/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsx createPlasmicElementProxy */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: eygJxeRspPrtKABTYb2Jd2
// Component: 8fOMVhrXUa
import * as React from "react";
import {
  hasVariant,
  classNames,
  Flex,
  wrapWithClassName,
  Renderer,
  NodeRenderer,
  createPlasmicElementProxy,
  makeFragment,
  PlasmicIcon,
  PlasmicSlot,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";
import "../plasmic__default_style.css"; // plasmic-import: global/defaultcss
import "./plasmic_brenorocha_dev.css"; // plasmic-import: eygJxeRspPrtKABTYb2Jd2/projectcss
import "./PlasmicBuyMeCoffeeText.css"; // plasmic-import: 8fOMVhrXUa/css

export type PlasmicBuyMeCoffeeText__VariantMembers = {};
export type PlasmicBuyMeCoffeeText__VariantsArgs = {};
export const PlasmicBuyMeCoffeeText__VariantProps = new Array<
  keyof PlasmicBuyMeCoffeeText__VariantsArgs
>();

export type PlasmicBuyMeCoffeeText__ArgsType = {};
export const PlasmicBuyMeCoffeeText__ArgProps = new Array<
  keyof PlasmicBuyMeCoffeeText__ArgsType
>();

export type PlasmicBuyMeCoffeeText__OverridesType = {
  buyMeCoffee?: Flex<"a">;
};

export interface DefaultBuyMeCoffeeTextProps {
  className?: string;
}

function PlasmicBuyMeCoffeeText__RenderFunc(props: {
  variants: PlasmicBuyMeCoffeeText__VariantsArgs;
  args: PlasmicBuyMeCoffeeText__ArgsType;
  overrides: PlasmicBuyMeCoffeeText__OverridesType;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  return (
    <a
      data-plasmic-name={"buyMeCoffee"}
      data-plasmic-override={overrides.buyMeCoffee}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={
        classNames({
          BuyMeCoffeeText__buyMeCoffee__Ytpcw: true,
          "plasmic-default__a": true,
          "plasmic-default__all": true
        }) +
        " " +
        ("coffee-cup" as const) +
        " __wab_text"
      }
      href={"https://www.buymeacoffee.com/brenorochadev" as const}
    >
      {"buy me a coffee"}
    </a>
  ) as React.ReactElement | null;
}

class PlasmicBuyMeCoffeeText__Renderer extends Renderer<
  PlasmicBuyMeCoffeeText__VariantsArgs,
  PlasmicBuyMeCoffeeText__ArgsType,
  PlasmicBuyMeCoffeeText__OverridesType,
  "buyMeCoffee"
> {
  constructor(
    variants: PlasmicBuyMeCoffeeText__VariantsArgs,
    args: PlasmicBuyMeCoffeeText__ArgsType
  ) {
    super(variants, args, PlasmicBuyMeCoffeeText__RenderFunc, "buyMeCoffee");
  }

  protected create(
    variants: PlasmicBuyMeCoffeeText__VariantsArgs,
    args: PlasmicBuyMeCoffeeText__ArgsType
  ) {
    return new PlasmicBuyMeCoffeeText__Renderer(variants, args);
  }

  getInternalVariantProps(): (keyof PlasmicBuyMeCoffeeText__VariantsArgs)[] {
    return PlasmicBuyMeCoffeeText__VariantProps;
  }

  getInternalArgProps(): (keyof PlasmicBuyMeCoffeeText__ArgsType)[] {
    return PlasmicBuyMeCoffeeText__ArgProps;
  }

  forNode(
    name: "buyMeCoffee"
  ): NodeRenderer<
    PlasmicBuyMeCoffeeText__VariantsArgs,
    PlasmicBuyMeCoffeeText__ArgsType,
    {
      buyMeCoffee?: Flex<"a">;
    }
  >;

  forNode(name: keyof PlasmicBuyMeCoffeeText__OverridesType) {
    return super.forNode(name);
  }
}

type PlasmicBuyMeCoffeeTextBuyMeCoffeeProps = PlasmicBuyMeCoffeeText__VariantsArgs &
  PlasmicBuyMeCoffeeText__ArgsType & {
    variants?: PlasmicBuyMeCoffeeText__VariantsArgs;
    args?: PlasmicBuyMeCoffeeText__ArgsType;
    overrides?: {
      buyMeCoffee?: Flex<"a">;
    };

    buyMeCoffee?: Flex<"a">;
  } & Omit<
    Partial<React.ComponentProps<"a">>,
    | keyof PlasmicBuyMeCoffeeText__VariantsArgs
    | keyof PlasmicBuyMeCoffeeText__ArgsType
    | "variants"
    | "args"
    | "buyMeCoffee"
  >;

export const PlasmicBuyMeCoffeeText = function PlasmicBuyMeCoffeeTextBuyMeCoffee<
  T extends PlasmicBuyMeCoffeeTextBuyMeCoffeeProps
>(props: T & StrictProps<T, PlasmicBuyMeCoffeeTextBuyMeCoffeeProps>) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "buyMeCoffee",
    descendantNames: ["buyMeCoffee"],
    internalArgPropNames: PlasmicBuyMeCoffeeText__ArgProps,
    internalVariantPropNames: PlasmicBuyMeCoffeeText__VariantProps
  });

  return PlasmicBuyMeCoffeeText__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "buyMeCoffee"
  });
};

PlasmicBuyMeCoffeeText.createRenderer = () =>
  new PlasmicBuyMeCoffeeText__Renderer({}, {});

export default PlasmicBuyMeCoffeeText;
/* prettier-ignore-end */
