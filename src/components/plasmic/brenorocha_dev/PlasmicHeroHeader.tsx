/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsx createPlasmicElementProxy */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: eygJxeRspPrtKABTYb2Jd2
// Component: 6wel9emd8p
import * as React from "react";
import {
  hasVariant,
  classNames,
  Flex,
  wrapWithClassName,
  Renderer,
  NodeRenderer,
  createPlasmicElementProxy,
  makeFragment,
  PlasmicIcon,
  PlasmicSlot,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";
import "../plasmic__default_style.css"; // plasmic-import: global/defaultcss
import "./plasmic_brenorocha_dev.css"; // plasmic-import: eygJxeRspPrtKABTYb2Jd2/projectcss
import "./PlasmicHeroHeader.css"; // plasmic-import: 6wel9emd8p/css

export type PlasmicHeroHeader__VariantMembers = {};
export type PlasmicHeroHeader__VariantsArgs = {};
export const PlasmicHeroHeader__VariantProps = new Array<
  keyof PlasmicHeroHeader__VariantsArgs
>();

export type PlasmicHeroHeader__ArgsType = {};
export const PlasmicHeroHeader__ArgProps = new Array<
  keyof PlasmicHeroHeader__ArgsType
>();

export type PlasmicHeroHeader__OverridesType = {
  heroHeader?: Flex<"div">;
  heroText?: Flex<"div">;
  heroText2?: Flex<"div">;
  heroText22?: Flex<"div">;
};

export interface DefaultHeroHeaderProps {
  className?: string;
}

function PlasmicHeroHeader__RenderFunc(props: {
  variants: PlasmicHeroHeader__VariantsArgs;
  args: PlasmicHeroHeader__ArgsType;
  overrides: PlasmicHeroHeader__OverridesType;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  return (
    <div
      data-plasmic-name={"heroHeader"}
      data-plasmic-override={overrides.heroHeader}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames({
        HeroHeader__heroHeader__Cv64s: true,
        "plasmic-default__all": true,
        "plasmic-default__div": true
      })}
    >
      <div
        className={classNames({
          HeroHeader__box__FdtRp: true,
          "plasmic-default__all": true,
          "plasmic-default__div": true
        })}
      >
        <div
          className={
            classNames({
              HeroHeader__box__HqXn7: true,
              "plasmic-default__all": true,
              "plasmic-default__div": true
            }) +
            " " +
            ("hero-title" as const)
          }
        >
          <div
            data-plasmic-name={"heroText"}
            data-plasmic-override={overrides.heroText}
            className={
              classNames({
                HeroHeader__heroText__iJkCN: true,
                "plasmic-default__all": true,
                "plasmic-default__div": true
              }) + " __wab_text"
            }
          >
            {"I BUILD CREATIVE STUFF AND WEB SOLUTIONS"}
          </div>

          <div
            data-plasmic-name={"heroText2"}
            data-plasmic-override={overrides.heroText2}
            className={
              classNames({
                HeroHeader__heroText2__wsu6j: true,
                "plasmic-default__all": true,
                "plasmic-default__div": true
              }) + " __wab_text"
            }
          >
            {"Breno Rocha\n"}
          </div>

          <div
            data-plasmic-name={"heroText22"}
            data-plasmic-override={overrides.heroText22}
            className={
              classNames({
                "HeroHeader__heroText22__pBXK-": true,
                "plasmic-default__all": true,
                "plasmic-default__div": true
              }) + " __wab_text"
            }
          >
            {"Software Engineer\n"}
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

class PlasmicHeroHeader__Renderer extends Renderer<
  PlasmicHeroHeader__VariantsArgs,
  PlasmicHeroHeader__ArgsType,
  PlasmicHeroHeader__OverridesType,
  "heroHeader"
> {
  constructor(
    variants: PlasmicHeroHeader__VariantsArgs,
    args: PlasmicHeroHeader__ArgsType
  ) {
    super(variants, args, PlasmicHeroHeader__RenderFunc, "heroHeader");
  }

  protected create(
    variants: PlasmicHeroHeader__VariantsArgs,
    args: PlasmicHeroHeader__ArgsType
  ) {
    return new PlasmicHeroHeader__Renderer(variants, args);
  }

  getInternalVariantProps(): (keyof PlasmicHeroHeader__VariantsArgs)[] {
    return PlasmicHeroHeader__VariantProps;
  }

  getInternalArgProps(): (keyof PlasmicHeroHeader__ArgsType)[] {
    return PlasmicHeroHeader__ArgProps;
  }

  forNode(
    name: "heroText22"
  ): NodeRenderer<
    PlasmicHeroHeader__VariantsArgs,
    PlasmicHeroHeader__ArgsType,
    {
      heroText22?: Flex<"div">;
    }
  >;

  forNode(
    name: "heroText2"
  ): NodeRenderer<
    PlasmicHeroHeader__VariantsArgs,
    PlasmicHeroHeader__ArgsType,
    {
      heroText2?: Flex<"div">;
    }
  >;

  forNode(
    name: "heroText"
  ): NodeRenderer<
    PlasmicHeroHeader__VariantsArgs,
    PlasmicHeroHeader__ArgsType,
    {
      heroText?: Flex<"div">;
    }
  >;

  forNode(
    name: "heroHeader"
  ): NodeRenderer<
    PlasmicHeroHeader__VariantsArgs,
    PlasmicHeroHeader__ArgsType,
    {
      heroHeader?: Flex<"div">;
      heroText?: Flex<"div">;
      heroText2?: Flex<"div">;
      heroText22?: Flex<"div">;
    }
  >;

  forNode(name: keyof PlasmicHeroHeader__OverridesType) {
    return super.forNode(name);
  }
}

type PlasmicHeroHeaderHeroHeaderProps = PlasmicHeroHeader__VariantsArgs &
  PlasmicHeroHeader__ArgsType & {
    variants?: PlasmicHeroHeader__VariantsArgs;
    args?: PlasmicHeroHeader__ArgsType;
    overrides?: {
      heroHeader?: Flex<"div">;
      heroText?: Flex<"div">;
      heroText2?: Flex<"div">;
      heroText22?: Flex<"div">;
    };

    heroHeader?: Flex<"div">;
    heroText?: Flex<"div">;
    heroText2?: Flex<"div">;
    heroText22?: Flex<"div">;
  } & Omit<
    Partial<React.ComponentProps<"div">>,
    | keyof PlasmicHeroHeader__VariantsArgs
    | keyof PlasmicHeroHeader__ArgsType
    | "variants"
    | "args"
    | "heroHeader"
    | "heroText"
    | "heroText2"
    | "heroText22"
  >;

export const PlasmicHeroHeader = function PlasmicHeroHeaderHeroHeader<
  T extends PlasmicHeroHeaderHeroHeaderProps
>(props: T & StrictProps<T, PlasmicHeroHeaderHeroHeaderProps>) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "heroHeader",
    descendantNames: ["heroHeader", "heroText", "heroText2", "heroText22"],
    internalArgPropNames: PlasmicHeroHeader__ArgProps,
    internalVariantPropNames: PlasmicHeroHeader__VariantProps
  });

  return PlasmicHeroHeader__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "heroHeader"
  });
};

type PlasmicHeroHeaderHeroTextProps = PlasmicHeroHeader__VariantsArgs &
  PlasmicHeroHeader__ArgsType & {
    variants?: PlasmicHeroHeader__VariantsArgs;
    args?: PlasmicHeroHeader__ArgsType;
    overrides?: {
      heroText?: Flex<"div">;
    };

    heroText?: Flex<"div">;
  } & Omit<
    Partial<React.ComponentProps<"div">>,
    | keyof PlasmicHeroHeader__VariantsArgs
    | keyof PlasmicHeroHeader__ArgsType
    | "variants"
    | "args"
    | "heroText"
  >;

PlasmicHeroHeader.heroText = function PlasmicHeroHeaderHeroText<
  T extends PlasmicHeroHeaderHeroTextProps
>(props: T & StrictProps<T, PlasmicHeroHeaderHeroTextProps>) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "heroText",
    descendantNames: ["heroText"],
    internalArgPropNames: PlasmicHeroHeader__ArgProps,
    internalVariantPropNames: PlasmicHeroHeader__VariantProps
  });

  return PlasmicHeroHeader__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "heroText"
  });
};

type PlasmicHeroHeaderHeroText2Props = PlasmicHeroHeader__VariantsArgs &
  PlasmicHeroHeader__ArgsType & {
    variants?: PlasmicHeroHeader__VariantsArgs;
    args?: PlasmicHeroHeader__ArgsType;
    overrides?: {
      heroText2?: Flex<"div">;
    };

    heroText2?: Flex<"div">;
  } & Omit<
    Partial<React.ComponentProps<"div">>,
    | keyof PlasmicHeroHeader__VariantsArgs
    | keyof PlasmicHeroHeader__ArgsType
    | "variants"
    | "args"
    | "heroText2"
  >;

PlasmicHeroHeader.heroText2 = function PlasmicHeroHeaderHeroText2<
  T extends PlasmicHeroHeaderHeroText2Props
>(props: T & StrictProps<T, PlasmicHeroHeaderHeroText2Props>) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "heroText2",
    descendantNames: ["heroText2"],
    internalArgPropNames: PlasmicHeroHeader__ArgProps,
    internalVariantPropNames: PlasmicHeroHeader__VariantProps
  });

  return PlasmicHeroHeader__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "heroText2"
  });
};

type PlasmicHeroHeaderHeroText22Props = PlasmicHeroHeader__VariantsArgs &
  PlasmicHeroHeader__ArgsType & {
    variants?: PlasmicHeroHeader__VariantsArgs;
    args?: PlasmicHeroHeader__ArgsType;
    overrides?: {
      heroText22?: Flex<"div">;
    };

    heroText22?: Flex<"div">;
  } & Omit<
    Partial<React.ComponentProps<"div">>,
    | keyof PlasmicHeroHeader__VariantsArgs
    | keyof PlasmicHeroHeader__ArgsType
    | "variants"
    | "args"
    | "heroText22"
  >;

PlasmicHeroHeader.heroText22 = function PlasmicHeroHeaderHeroText22<
  T extends PlasmicHeroHeaderHeroText22Props
>(props: T & StrictProps<T, PlasmicHeroHeaderHeroText22Props>) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "heroText22",
    descendantNames: ["heroText22"],
    internalArgPropNames: PlasmicHeroHeader__ArgProps,
    internalVariantPropNames: PlasmicHeroHeader__VariantProps
  });

  return PlasmicHeroHeader__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "heroText22"
  });
};

PlasmicHeroHeader.createRenderer = () =>
  new PlasmicHeroHeader__Renderer({}, {});

export default PlasmicHeroHeader;
/* prettier-ignore-end */
