/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsx createPlasmicElementProxy */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: eygJxeRspPrtKABTYb2Jd2
// Component: ZY2oovOnA1
import * as React from "react";
import {
  hasVariant,
  classNames,
  Flex,
  wrapWithClassName,
  Renderer,
  NodeRenderer,
  createPlasmicElementProxy,
  makeFragment,
  PlasmicIcon,
  PlasmicSlot,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";
import "../plasmic__default_style.css"; // plasmic-import: global/defaultcss
import "./plasmic_brenorocha_dev.css"; // plasmic-import: eygJxeRspPrtKABTYb2Jd2/projectcss
import "./PlasmicAstronaut.css"; // plasmic-import: ZY2oovOnA1/css

export type PlasmicAstronaut__VariantMembers = {};
export type PlasmicAstronaut__VariantsArgs = {};
export const PlasmicAstronaut__VariantProps = new Array<
  keyof PlasmicAstronaut__VariantsArgs
>();

export type PlasmicAstronaut__ArgsType = {};
export const PlasmicAstronaut__ArgProps = new Array<
  keyof PlasmicAstronaut__ArgsType
>();

export type PlasmicAstronaut__OverridesType = {
  astronaut?: Flex<"a">;
  astroCoder?: Flex<"div">;
  coffeeCup?: Flex<"div">;
  link?: Flex<"a">;
};

export interface DefaultAstronautProps {
  className?: string;
}

function PlasmicAstronaut__RenderFunc(props: {
  variants: PlasmicAstronaut__VariantsArgs;
  args: PlasmicAstronaut__ArgsType;
  overrides: PlasmicAstronaut__OverridesType;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  return (
    <a
      data-plasmic-name={"astronaut"}
      data-plasmic-override={overrides.astronaut}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={
        classNames({
          Astronaut__astronaut__nFaVe: true,
          "plasmic-default__a": true,
          "plasmic-default__all": true
        }) +
        " " +
        ("astronaut-div" as const)
      }
      href={"https://www.buymeacoffee.com/brenorochadev" as const}
    >
      <div
        data-plasmic-name={"astroCoder"}
        data-plasmic-override={overrides.astroCoder}
        className={
          classNames({
            Astronaut__astroCoder__qPUpo: true,
            "plasmic-default__all": true,
            "plasmic-default__div": true
          }) +
          " " +
          ("astro-coder" as const)
        }
      ></div>

      <div
        data-plasmic-name={"coffeeCup"}
        data-plasmic-override={overrides.coffeeCup}
        className={
          classNames({
            Astronaut__coffeeCup__ZVf22: true,
            "plasmic-default__all": true,
            "plasmic-default__div": true
          }) +
          " " +
          ("coffee-cup" as const)
        }
      ></div>

      <a
        data-plasmic-name={"link"}
        data-plasmic-override={overrides.link}
        className={
          classNames({
            Astronaut__link__xAP58: true,
            "plasmic-default__a": true,
            "plasmic-default__all": true
          }) + " __wab_text"
        }
        href={"https://www.buymeacoffee.com/brenorochadev" as const}
      >
        {""}
      </a>
    </a>
  ) as React.ReactElement | null;
}

class PlasmicAstronaut__Renderer extends Renderer<
  PlasmicAstronaut__VariantsArgs,
  PlasmicAstronaut__ArgsType,
  PlasmicAstronaut__OverridesType,
  "astronaut"
> {
  constructor(
    variants: PlasmicAstronaut__VariantsArgs,
    args: PlasmicAstronaut__ArgsType
  ) {
    super(variants, args, PlasmicAstronaut__RenderFunc, "astronaut");
  }

  protected create(
    variants: PlasmicAstronaut__VariantsArgs,
    args: PlasmicAstronaut__ArgsType
  ) {
    return new PlasmicAstronaut__Renderer(variants, args);
  }

  getInternalVariantProps(): (keyof PlasmicAstronaut__VariantsArgs)[] {
    return PlasmicAstronaut__VariantProps;
  }

  getInternalArgProps(): (keyof PlasmicAstronaut__ArgsType)[] {
    return PlasmicAstronaut__ArgProps;
  }

  forNode(
    name: "link"
  ): NodeRenderer<
    PlasmicAstronaut__VariantsArgs,
    PlasmicAstronaut__ArgsType,
    {
      link?: Flex<"a">;
    }
  >;

  forNode(
    name: "coffeeCup"
  ): NodeRenderer<
    PlasmicAstronaut__VariantsArgs,
    PlasmicAstronaut__ArgsType,
    {
      coffeeCup?: Flex<"div">;
    }
  >;

  forNode(
    name: "astroCoder"
  ): NodeRenderer<
    PlasmicAstronaut__VariantsArgs,
    PlasmicAstronaut__ArgsType,
    {
      astroCoder?: Flex<"div">;
    }
  >;

  forNode(
    name: "astronaut"
  ): NodeRenderer<
    PlasmicAstronaut__VariantsArgs,
    PlasmicAstronaut__ArgsType,
    {
      astronaut?: Flex<"a">;
      astroCoder?: Flex<"div">;
      coffeeCup?: Flex<"div">;
      link?: Flex<"a">;
    }
  >;

  forNode(name: keyof PlasmicAstronaut__OverridesType) {
    return super.forNode(name);
  }
}

type PlasmicAstronautAstronautProps = PlasmicAstronaut__VariantsArgs &
  PlasmicAstronaut__ArgsType & {
    variants?: PlasmicAstronaut__VariantsArgs;
    args?: PlasmicAstronaut__ArgsType;
    overrides?: {
      astronaut?: Flex<"a">;
      astroCoder?: Flex<"div">;
      coffeeCup?: Flex<"div">;
      link?: Flex<"a">;
    };

    astronaut?: Flex<"a">;
    astroCoder?: Flex<"div">;
    coffeeCup?: Flex<"div">;
    link?: Flex<"a">;
  } & Omit<
    Partial<React.ComponentProps<"a">>,
    | keyof PlasmicAstronaut__VariantsArgs
    | keyof PlasmicAstronaut__ArgsType
    | "variants"
    | "args"
    | "astronaut"
    | "astroCoder"
    | "coffeeCup"
    | "link"
  >;

export const PlasmicAstronaut = function PlasmicAstronautAstronaut<
  T extends PlasmicAstronautAstronautProps
>(props: T & StrictProps<T, PlasmicAstronautAstronautProps>) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "astronaut",
    descendantNames: ["astronaut", "astroCoder", "coffeeCup", "link"],
    internalArgPropNames: PlasmicAstronaut__ArgProps,
    internalVariantPropNames: PlasmicAstronaut__VariantProps
  });

  return PlasmicAstronaut__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "astronaut"
  });
};

type PlasmicAstronautAstroCoderProps = PlasmicAstronaut__VariantsArgs &
  PlasmicAstronaut__ArgsType & {
    variants?: PlasmicAstronaut__VariantsArgs;
    args?: PlasmicAstronaut__ArgsType;
    overrides?: {
      astroCoder?: Flex<"div">;
    };

    astroCoder?: Flex<"div">;
  } & Omit<
    Partial<React.ComponentProps<"div">>,
    | keyof PlasmicAstronaut__VariantsArgs
    | keyof PlasmicAstronaut__ArgsType
    | "variants"
    | "args"
    | "astroCoder"
  >;

PlasmicAstronaut.astroCoder = function PlasmicAstronautAstroCoder<
  T extends PlasmicAstronautAstroCoderProps
>(props: T & StrictProps<T, PlasmicAstronautAstroCoderProps>) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "astroCoder",
    descendantNames: ["astroCoder"],
    internalArgPropNames: PlasmicAstronaut__ArgProps,
    internalVariantPropNames: PlasmicAstronaut__VariantProps
  });

  return PlasmicAstronaut__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "astroCoder"
  });
};

type PlasmicAstronautCoffeeCupProps = PlasmicAstronaut__VariantsArgs &
  PlasmicAstronaut__ArgsType & {
    variants?: PlasmicAstronaut__VariantsArgs;
    args?: PlasmicAstronaut__ArgsType;
    overrides?: {
      coffeeCup?: Flex<"div">;
    };

    coffeeCup?: Flex<"div">;
  } & Omit<
    Partial<React.ComponentProps<"div">>,
    | keyof PlasmicAstronaut__VariantsArgs
    | keyof PlasmicAstronaut__ArgsType
    | "variants"
    | "args"
    | "coffeeCup"
  >;

PlasmicAstronaut.coffeeCup = function PlasmicAstronautCoffeeCup<
  T extends PlasmicAstronautCoffeeCupProps
>(props: T & StrictProps<T, PlasmicAstronautCoffeeCupProps>) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "coffeeCup",
    descendantNames: ["coffeeCup"],
    internalArgPropNames: PlasmicAstronaut__ArgProps,
    internalVariantPropNames: PlasmicAstronaut__VariantProps
  });

  return PlasmicAstronaut__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "coffeeCup"
  });
};

type PlasmicAstronautLinkProps = PlasmicAstronaut__VariantsArgs &
  PlasmicAstronaut__ArgsType & {
    variants?: PlasmicAstronaut__VariantsArgs;
    args?: PlasmicAstronaut__ArgsType;
    overrides?: {
      link?: Flex<"a">;
    };

    link?: Flex<"a">;
  } & Omit<
    Partial<React.ComponentProps<"a">>,
    | keyof PlasmicAstronaut__VariantsArgs
    | keyof PlasmicAstronaut__ArgsType
    | "variants"
    | "args"
    | "link"
  >;

PlasmicAstronaut.link = function PlasmicAstronautLink<
  T extends PlasmicAstronautLinkProps
>(props: T & StrictProps<T, PlasmicAstronautLinkProps>) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "link",
    descendantNames: ["link"],
    internalArgPropNames: PlasmicAstronaut__ArgProps,
    internalVariantPropNames: PlasmicAstronaut__VariantProps
  });

  return PlasmicAstronaut__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "link"
  });
};

PlasmicAstronaut.createRenderer = () => new PlasmicAstronaut__Renderer({}, {});

export default PlasmicAstronaut;
/* prettier-ignore-end */
